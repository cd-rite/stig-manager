name: Coverage
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - test-coverage
    paths:
      - 'api/source/**'
      - 'test/api/**'
      - 'Dockerfile'
      - '.github/workflows/coverage.yml'
# defaults:
#   run:
#     shell: bash      
env:
  STIGMAN_API_PORT: 64001
  STIGMAN_DB_HOST: localhost
  STIGMAN_DB_PORT: 3306
  STIGMAN_DB_PASSWORD: stigman
  STIGMAN_API_AUTHORITY: http://127.0.0.1:8080/auth/realms/stigman 
  NODE_V8_COVERAGE: /home/runner/work/stig-manager/stig-manager/api/source/coverage/tmp/

jobs:
  # npm_audit:
  #   name: npm audit
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: install dependencies
  #       run: npm ci
  #       working-directory: ./api/source/
  #     - uses: oke-py/npm-audit-action@2c6b2da234031fbf72af81a04c76b3a152bb2222 # pin@v2
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         create_issues: false
  #         create_pr_comments: true
  #         working_directory: ./api/source/
  test_api:
    name: tests with coverage
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18 
      - name: coverage directory
        run: printenv NODE_V8_COVERAGE      
      - name: list processes2
        run: ps -ef       
      - name: install c8 coverage reporter
        run: |
          sudo npm install -g c8
      - name: Install Newman reporter
        id: newman-reporter-install
        run: |
          sudo npm install -g newman-reporter-htmlextra                    
      - name: install dependencies
        working-directory: ./api/source
        run: npm install        
      - name: Run mock Keycloak
        id: idp-run
        working-directory: ./test/api/mock-keycloak
        run: |
          python3 -m http.server 8080 &
      - name: Run MySQL container
        id: mysql-run
        run: |
          docker run -d --name stig-manager-db \
          -p 3306:3306 \
          -e MYSQL_ROOT_PASSWORD=rootpw \
          -e MYSQL_DATABASE=stigman \
          -e MYSQL_USER=stigman \
          -e MYSQL_PASSWORD=stigman \
          mysql:8.0.21
      - name: run app and echo pid
        working-directory: ./api/source
        run: sh -c 'echo $$ > /tmp/test.pid ; exec c8 -r html -r text node index.js' &
      - name: pid file check
        working-directory: ./api/source
        run: cat /tmp/test.pid         
      - name: last backgrounded process
        working-directory: ./api/source
        run: echo  $!
      - name: ps
        run: ps -ef  
      - name: sleep I guess
        run: sleep 10           
      - name: Wait for bootstrap
        run: for i in {1..10}; do [ $i -gt 1 ] && sleep 5; curl --output /dev/null --silent --fail http://localhost:64001/api/op/configuration && s=0 && break || s=$?; printf '.'; done; (exit $s)
      - name: Run Newman Collection LoadTestData
        id: newman-run-loadTestData
        working-directory: ./test/api
        run: |
          set -o pipefail
          newman run postman_collection.json -e postman_environment.json -d collectionRunnerData.json -n 1 --folder LoadTestData -r cli,htmlextra  --reporter-cli-no-assertions --reporter-cli-no-console --reporter-htmlextra-showOnlyFails --reporter-htmlextra-export ./newman/dataPreloadReport.html | grep -A18 '┌─────'
      - name: Run Newman Collection GETS
        id: newman-run-gets
        if: steps.newman-run-loadTestData.conclusion == 'success'
        working-directory: ./test/api
        run: |
          set -o pipefail
          newman run postman_collection.json -e postman_environment.json -d collectionRunnerData.json -n 6 --folder GETs -r cli,htmlextra --reporter-cli-no-assertions --reporter-cli-no-console --reporter-htmlextra-showOnlyFails --reporter-htmlextra-export ./newman/GetsReport.html | grep -A18 '┌─────'
      - name: Run Newman Collection Posts, Puts, Patches, Deletes
        id: newman-run-pppd
        if: steps.newman-run-loadTestData.conclusion == 'success'
        working-directory: ./test/api
        run: |
          set -o pipefail
          newman run postman_collection.json -e postman_environment.json -d collectionRunnerData.json -n 6 --folder "POSTS, Puts, Patches, and Deletes" -r cli,htmlextra --reporter-cli-no-assertions --reporter-cli-no-console --reporter-htmlextra-showOnlyFails --reporter-htmlextra-export ./newman/PPPDReport.html | grep -A18 '┌─────'
      - name: Run Newman Collection STIGS
        id: newman-run-stigs
        if: steps.newman-run-loadTestData.conclusion == 'success'
        working-directory: ./test/api
        run: |
          set -o pipefail
          newman run postman_collection.json -e postman_environment.json -d collectionRunnerData.json -n 2 --folder "STIGS" -r cli,htmlextra --reporter-cli-no-assertions --reporter-cli-no-console --reporter-htmlextra-showOnlyFails --reporter-htmlextra-export ./newman/stigsReport.html | grep -A18 '┌─────'
      - name: Run Newman Collection LVL1 Cross-Boundary Tests
        id: newman-run-lvl1-cross-boundary
        if: steps.newman-run-loadTestData.conclusion == 'success'
        working-directory: ./test/api
        run: |
          set -o pipefail
          newman run postman_collection.json -e postman_environment.json -d collectionRunnerData.json -n 1 --folder "LVL1 cross-boundary tests" -r cli,htmlextra --reporter-cli-no-assertions --reporter-cli-no-console --reporter-htmlextra-showEnvironmentData --reporter-htmlextra-export ./newman/lvl1Report.html | grep -A18 '┌─────'
      - name: Run Newman Collection Additional Sundry Tests
        id: newman-run-additional-sundry
        if: steps.newman-run-loadTestData.conclusion == 'success'
        working-directory: ./test/api
        run: |
          set -o pipefail
          newman run postman_collection.json -e postman_environment.json -d collectionRunnerData.json -n 1 --folder "Additional sundry tests" -r cli,htmlextra --reporter-cli-no-assertions --reporter-cli-no-console --reporter-htmlextra-showEnvironmentData --reporter-htmlextra-export ./newman/AdditionalSundryReport.html | grep -A18 '┌─────'
      - name: ps
        run: ps -ef            
      - name: try to get child based on parent
        working-directory: ./api/source
        run: ps -ef --ppid `cat /tmp/test.pid` -o pid=              
      - name: kill pid
        working-directory: ./api/source
        run: kill -SIGINT $(ps -ef --ppid `cat /tmp/test.pid` -o pid= )       
      - name: ps
        run: ps -ef       
      - name: sleep I guess
        run: sleep 20        
      - name: ps
        run: ps -ef                              
      - name: Upload Newman artifact
        id: artifact-upload-newman
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: newman-htmlextra
          path: ./test/api/newman
      - name: Upload coverage artifact
        id: artifact-upload-coverage
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: coverage-report
          path: ./api/source/coverage


